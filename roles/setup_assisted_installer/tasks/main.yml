---
- name: Setup AI Host
  become: True
  block:
    - name: Install podman
      package:
        name: podman
        state: present

    - name: Create directories for assisted-installer
      file:
        path: "{{ item }}"
        mode: 0775
        state: directory
      loop:
        - "{{ assisted_installer_dir }}"
        - "{{ assisted_installer_data_dir }}"

    - name: Configure registry cert and pull_secret
      include_tasks: setup_for_using_local_registry.yml
      when: use_local_mirror_registry  | bool

    - name: Open ports zone internal and public, for firewalld
      firewalld:
        port: "{{ item.1 }}/tcp"
        permanent: yes
        immediate: yes
        state: enabled
        zone: "{{ item.0 }}"
      loop: "{{ ai_firewall_zones | product(ai_firewall_ports) | list }}"

    - name: Create directories for asssited installer containers
      file:
        path: "{{ assisted_installer_data_dir }}/{{ item }}"
        mode: 0775
        state: directory
        recurse: true
      loop:
        - postgresql
        - image_service

- name: Setup AI pod
  become: True
  environment:
    XDG_RUNTIME_DIR: "{{ config_file_path }}"
  block:
    - name: Template out assisted-installer files
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0644
        trim_blocks: true
        lstrip_blocks: true
      loop:
        - src: configmap.yml.j2
          dest: "{{ assisted_installer_dir }}/configmap.yml"
        - src: pod.yml.j2
          dest: "{{ assisted_installer_dir }}/pod.yml"

    - name: Gather info about specific pods
      containers.podman.podman_pod_info:
        name: assisted-installer
      register: ai_pod_details

    - name: Remove Assisted Installer Pod
      containers.podman.podman_pod:
        name: assisted-installer
        state: absent
      when: (ai_pod_details.pods | length) > 0

    - name: Play kube file
      containers.podman.podman_play:
        kube_file: "{{ assisted_installer_dir }}/pod.yml"
        configmap: "{{ assisted_installer_dir }}/configmap.yml"
        recreate: true
        state: created

- name: Setup assisted_installer systemd service
  become: true
  block:
    - name: Copy the systemd service file
      copy:
        content: |
          [Unit]
          Description=Podman assisted_installer.service
          [Service]
          Restart=no
          ExecStart=/usr/bin/podman pod start assisted-installer
          ExecStop=/usr/bin/podman pod stop -t 10 assisted-installer
          KillMode=none
          Type=forking
          [Install]
          WantedBy=default.target
        dest: "/etc/systemd/system/assisted_installer.service"
        mode: 0644

    - name: Reload systemd service
      systemd:
        daemon_reexec: yes
        scope: system

    - name: Enable assisted_installer.service
      systemd:
        name: assisted_installer
        enabled: yes
        scope: system

    - name: Start assisted_installer.service
      systemd:
        name: assisted_installer
        state: started
        scope: system
