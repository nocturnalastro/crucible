- name: Create inventory host to vm name mapper
  set_fact:
    vm_to_inventory_mapper: "{{ (vm_to_inventory_mapper | default([])) | combine({
      (item.startswith(cluster_name) | ternary(item, (cluster_name + '_' + item))): item
    }) }}"
  loop: "{{ groups['masters'] + groups['workers'] | default([]) }}"
  when: item in hostvars and hostvars[item]['vendor'] | lower == 'kvm'

- debug:
    var: vm_to_inventory_mapper
    verbosity: 1

- name: Destroy vms
  import_tasks: destroy_networks.yml
  become: true

- name: Get VMs to Remove
  block:
    - name: List vms
      community.libvirt.virt:
        command: list_vms
      register: vms_list
      become: true

    - debug:
        var: vms_list.list_vms
        verbosity: 1

    - name: Get filtered vm list
      set_fact:
        vms_to_remove: "{{ [item] + vms_to_remove | default([]) }}"
      loop: "{{ vms_list.list_vms }}"
      when: vm_to_inventory_mapper[item] in hostvars and hostvars[vm_to_inventory_mapper[item]]['vendor'] | lower == 'kvm'

- debug:
    var: vms_to_remove
    verbosity: 1

- name: Clean VM images
  import_tasks: clean_vm_images.yml
  when: vms_to_remove is defined and vms_to_remove | bool
  become: true

- name: Destroy vms
  import_tasks: destroy_vms.yml
  ignore_errors: yes
  become: true
