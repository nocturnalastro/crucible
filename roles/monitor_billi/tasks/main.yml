- name: Load state data
  set_fact:
    assisted_installer_ip: "{{  (lookup('file', cluster_manifest_parent_dir + '/.openshift_install_state.json') | string | regex_search(assisted_installer_ip_regex, '\\1')| list)[0] }}"

- name: Distribute assisted_installer_ip
  vars:
    assisted_installer_ip_reference: "{{ assisted_installer_ip }}"
  set_fact:
    assisted_installer_ip: "{{ assisted_installer_ip_reference }}"
  loop: "{{ groups['nodes'] }}"
  delegate_to: "{{ item }}"
  delegate_facts: True

# - name: Wait for up to 30 minutes for the assisted installer to come online
#   uri:
#     url: "{{ base_url }}/openshift-versions"
#     method: GET
#     status_code: [200]
#   register: versions_reply
#   until: versions_reply is succeeded
#   retries: 60
#   delay: 30

# - name: Fail if resturned version is incorrect as something has gone wrong
#   fail:
#     msg: "Something went wrong with the version incorrect"
#   when:
#     - openshift_version not in (versions_reply.json.keys() | list)
#     - openshift_full_version != versions_reply.json[openshift_version].display_name

- name: Wait for up to 30 minutes for cluster definition
  uri:
    url: "{{ base_url }}/clusters"
    method: GET
    status_code: [200, 201]
  register: cluster_reply
  until:
    - ('json' in cluster_reply)
    - cluster_reply.json | length > 0
  retries: 60
  delay: 30

- name: Fail if more than one cluster
  fail:
    msg: more than one cluster defined
  when: cluster_reply.json | length > 1

- name: Get cluster_id
  set_fact:
    cluster_id: "{{ cluster_reply.json[0].id }}"

- name: Set number_of_nodes
  set_fact:
    number_of_nodes: "{{ inventory_nodes | length | int }}"

- name: Allow up to 20 minutes for all hosts to be discovered
  uri:
    url: "{{ base_url }}/clusters/{{ cluster_id }}/hosts?with-inventory=1"
    method: GET
    status_code: [200, 201]
    return_content: True
  register: cluster_hosts
  until:  ((cluster_hosts.json | default([])) | list | length | int) == (number_of_nodes | int)
  retries: 30
  delay: 60

- name: Wait for up to 30 minutes for infra-env-id definition
  uri:
    url: "{{ base_url }}/infra-envs"
    method: GET
    status_code: [200, 201]
  register: infra_envs_reply
  until: infra_envs_reply.json | length > 0
  retries: 60
  delay: 30

- name: Fail if more than one cluster
  fail:
    msg: more than one infra-env defined
  when: infra_envs_reply.json | length > 1

- name: Get infra_env_id
  set_fact:
    infra_env_id: "{{ infra_envs_reply.json[0].id }}"

# - name: Patch hostname and role
#   ansible.builtin.include_tasks:
#     file: patch_hostname.yml
#   loop: "{{ cluster_hosts.json }}"
#   loop_control:
#     loop_var: discovered_host

- name: Wait for bootstrap complete
  ansible.builtin.shell:
    cmd: "{{ billi_executable }} --log-level=debug agent wait-for bootstrap-complete"
    chdir: "{{ cluster_manifest_parent_dir }}"

- name: Wait for install complete
  ansible.builtin.shell:
    cmd: "{{ billi_executable }} --log-level=debug agent wait-for install-complete"
    chdir: "{{ cluster_manifest_parent_dir }}"
